Incoming parts need to be transformed to HTML:

Part 0: foo\n      | <p id="0-0"><span id="0-0-0">foo</span></p>
Part 1: bar\n      | <p id="0-1"><span id="0-1-0">bar</span></p>


Now, parts can come in out of order:

Part 1: bar\n      | <p id="0-0"><span id="0-0-0">foo</span></p>
Part 0: foo\n      | <p id="0-1"><span id="0-1-0">bar</span></p>


Parts can contain multiple lines which need to be mapped to multiple HTML p tags:

Part 0: foo\n      | <p id="0-0"><span id="0-0-0">foo</span></p>
Part 1: bar\nbaz\n | <p id="0-1"><span id="0-1-0">bar</span></p>
                   | <p id="0-2"><span id="0-2-0">baz</span></p>


Different parts can contain output that belongs to the same line, so they need to end up on the same HTML p tag:

Part 0: foo\n      | <p id="0-0"><span id="0-0-0">foo</span></p>
Part 1: .          | <p id="1-0"><span id="1-0-0">.</span><span id="2-0-0">.</span></p>
Part 2: .\n        |


Of course, these parts can still come in out of order:

Part 2: .\n        | <p id="0-0"><span id="0-0-0">foo</span></p>
Part 0: foo\n      | <p id="1-0"><span id="1-0-0">.</span><span id="2-0-0">.</span></p>
Part 1: .          |


Yet, we do not want to re-parse and re-render all of the log over and over again.





P:0            P:0
  L:0-0          L:0-0
    S:0-0-0        S:0-0-0
    S:0-0-1        S:0-0-1
  L:1-0            S:0-1-0
    S:0-1-0        S:0-1-1
    S:0-1-1
  L:2-0
    S:0-2-0
    S:0-2-1
P:1            P:1
  L:1-0          L:1-0
    S:1-0-0        S:1-0-0
    S:1-0-1        S:1-0-1





